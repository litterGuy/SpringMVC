<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	   		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	   		http://www.springframework.org/schema/context
	        http://www.springframework.org/schema/context/spring-context-3.1.xsd
	        http://www.springframework.org/schema/mvc 
			http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">

	<!-- 采用注释的方式配置bean（通过注解，把一个URL映射到Controller类上） -->
    <bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping" />
    <!-- ：启动Spring MVC的注解功能，完成请求和注解POJO的映射 --> 
    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
    	<property name="messageConverters">
            <list>
           		<!-- JSON -->
            	<bean class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter"/>
            	<bean class="org.springframework.http.converter.StringHttpMessageConverter">
       				<property name="supportedMediaTypes">
                      	<list>  
                          	<value>text/html;charset=UTF-8</value>
                          	<value>application/json;charset=UTF-8</value>
                      	</list>
               		</property>
               		<property name="writeAcceptCharset" value="false"></property>
           		</bean>
            </list>
        </property>
    </bean>
	
	<!-- 默认的注解映射的支持(配置注解驱动的Spring MVC Controller 的编程模型) -->
	<!-- <mvc:annotation-driven/>相当于注册了DefaultAnnotationHandlerMapping
		和AnnotationMethodHandlerAdapter两个bean，配置一些messageconverter。
		即解决了@Controller注解的使用前提配置。 --> 
    <!-- <mvc:annotation-driven /> --> 
	
	<!-- 拦截器 -->  
    <mvc:interceptors>  
        <mvc:interceptor>
	        <mvc:mapping path="/ordercount/*"/>
	        <bean class="com.cc.ordercount.util.TokenInterceptor" />
	    </mvc:interceptor>  
    </mvc:interceptors>
    <!-- (单个拦截器)
    <mvc:interceptors>  
        <bean class="com.cc.ordercount.util.TokenInterceptor" />  
    </mvc:interceptors>
     -->
	
	<!-- 配置要扫描的包 -->
	<context:component-scan base-package="com.cc.ordercount.*"/> 
	
	<!-- 配置静态资源 -->
    <mvc:default-servlet-handler/>
	
	<!-- 注册视图解析器，就是根据返回值指定到某个页面 -->
	<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
		<!--页面文件的路径，在/views目录下-->
		<property name="prefix">
			<value>/views/</value>
		</property>
		<property name="suffix">
			<value>.jsp</value>
		</property>
	</bean>
	
</beans>
